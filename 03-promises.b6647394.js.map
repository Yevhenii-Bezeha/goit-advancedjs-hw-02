{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAkBC,SAASC,cAAc,kBACzCC,EAAiBF,SAASC,cAAc,iBACxCE,EAAcH,SAASC,cAAc,mBAM3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAS,CAACH,WAAUC,UAEpBG,EAAQ,CAACJ,WAAUC,S,GAEpBA,E,IAdQN,SAASC,cAAc,SAG/Ba,iBAAiB,UAetB,SAAkBC,GAChBA,EAAMC,iBAKN,IAJA,IAAMV,EAAQW,OAAOlB,EAAgBmB,OAC/BC,EAAOF,OAAOf,EAAegB,OAC7BE,EAASH,OAAOd,EAAYe,OAEzBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BjB,EAAciB,EAAI,EAAGf,EAASe,EAAIF,GAAOG,MAAK,SAACC,GAC7CC,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAA+CC,OAAtBJ,EAAOlB,SAAS,QAAmBsB,OAAbJ,EAAOjB,MAAM,M,IACnFsB,OAAM,SAACC,GACRL,EAAA3B,GAAS4B,OAAOK,QAAQ,sBAA2CH,OAArBE,EAAMxB,SAAS,QAAkBsB,OAAZE,EAAMvB,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelayInput = document.querySelector('[name=\"delay\"]');\nconst delayStepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\n\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve ({position, delay})\n    } else {\n      reject ({position, delay})\n    }\n  }, delay)\n    })\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const delay = Number(firstDelayInput.value);\n  const step = Number(delayStepInput.value);\n  const amount = Number(amountInput.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + (i * step)).then((result) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n    }).catch((error) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n    });\n  }\n};\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInput","document","querySelector","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","Number","value","step","amount","i","then","result","$parcel$interopDefault","Notify","success","concat","catch","error","failure"],"version":3,"file":"03-promises.b6647394.js.map"}